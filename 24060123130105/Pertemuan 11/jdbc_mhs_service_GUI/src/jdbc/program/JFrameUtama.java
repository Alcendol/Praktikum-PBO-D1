/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jdbc.program;

import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import jdbc.model.Mahasiswa;
import jdbc.service.MysqlMahasiswaService;

/**
 *
 * @author ACER
 */
public class JFrameUtama extends javax.swing.JFrame {

    /**
     * Creates new form JFrameUtama
     */
    
    /*
    Attributes
    */
    DefaultListModel<Integer> idModel = new DefaultListModel<>();
    DefaultListModel<String> namaModel = new DefaultListModel<>();

//    JList<Integer> idList = new JList<>(idModel);
//    JList<String> namaList = new JList<>(namaModel);




    
    // Service untuk mengakses data mahasiswa
    static MysqlMahasiswaService service = new MysqlMahasiswaService();



    public JFrameUtama() {
        initComponents();
    }

    
    public void updateList() {
        // Mengupdate JList dengan model yang baru
        List_id.setModel(idModel);
        List_nama.setModel(namaModel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        List_id = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_nama = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        Button_AmbilData = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        TextField_nama = new javax.swing.JTextField();
        TextField_ID1 = new javax.swing.JTextField();
        TextField_nama1 = new javax.swing.JTextField();
        TextField_ID2 = new javax.swing.JTextField();
        TextField_nama2 = new javax.swing.JTextField();
        Button_edit = new javax.swing.JButton();
        Button_hapus = new javax.swing.JButton();
        Button_tambahkan = new javax.swing.JButton();
        Button_resetIndex = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("NAMA");

        List_id.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                List_idValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(List_id);

        jScrollPane2.setViewportView(List_nama);

        jLabel3.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        jLabel3.setText("Kelola Data Mahasiswa");

        Button_AmbilData.setText("Ambil Semua Data");
        Button_AmbilData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_AmbilDataActionPerformed(evt);
            }
        });

        jLabel4.setText("Nama :");

        TextField_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_namaActionPerformed(evt);
            }
        });

        TextField_ID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_ID1ActionPerformed(evt);
            }
        });

        TextField_nama1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_nama1ActionPerformed(evt);
            }
        });

        TextField_ID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_ID2ActionPerformed(evt);
            }
        });

        TextField_nama2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_nama2ActionPerformed(evt);
            }
        });

        Button_edit.setText("Edit");
        Button_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_editActionPerformed(evt);
            }
        });

        Button_hapus.setText("Hapus");
        Button_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_hapusActionPerformed(evt);
            }
        });

        Button_tambahkan.setText("Tambahkan");
        Button_tambahkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_tambahkanActionPerformed(evt);
            }
        });

        Button_resetIndex.setText("Reset indeks");
        Button_resetIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_resetIndexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_AmbilData)
                    .addComponent(TextField_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextField_ID2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(TextField_ID1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextField_nama1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_nama2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Button_edit)
                            .addComponent(Button_hapus)))
                    .addComponent(Button_tambahkan, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_resetIndex, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Button_AmbilData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextField_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_tambahkan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField_ID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_nama1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button_edit))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Button_hapus)
                            .addComponent(TextField_nama2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_ID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_resetIndex)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_AmbilDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_AmbilDataActionPerformed
        
        // Mengambil data mahasiswa dari service
        List<Mahasiswa> listMhs = service.getAll();

        // Mengosongkan model list sebelum menambahkan data baru
        idModel.clear();
        namaModel.clear();
        // Mengisi model list dengan data mahasiswa
        for (Mahasiswa mhs : listMhs) {
            // Menambahkan ID dan nama ke model list
            idModel.addElement(mhs.getId());
            namaModel.addElement(mhs.getNama());
        }

        updateList();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_Button_AmbilDataActionPerformed

    private void TextField_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_namaActionPerformed
        // Ketika TextField_nama diisi, kita bisa melakukan sesuatu
        
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_namaActionPerformed

    private void TextField_ID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_ID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_ID1ActionPerformed

    private void TextField_nama1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_nama1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_nama1ActionPerformed

    private void TextField_ID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_ID2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_ID2ActionPerformed

    private void TextField_nama2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_nama2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_nama2ActionPerformed

    private void Button_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_editActionPerformed
        // Pastikan TextField_ID1 dan TextField_nama1 tidak kosong
        if (TextField_ID1.getText().isEmpty() || TextField_nama1.getText().isEmpty()) {
            return;
        }
        try {
            int id = Integer.parseInt(TextField_ID1.getText());
            String nama = TextField_nama1.getText();
            Mahasiswa mhs = service.makeMhsObject();
            mhs.setId(id);
            mhs.setNama(nama);
            service.update(mhs);
            // Sinkronkan ulang seluruh list dari database
            idModel.clear();
            namaModel.clear();
            List<Mahasiswa> listMhs = service.getAll();
            for (Mahasiswa i : listMhs) {
                idModel.addElement(i.getId());
                namaModel.addElement(i.getNama());
            }
            updateList();
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "ID harus berupa angka!", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        TextField_ID1.setText("");
        TextField_nama1.setText("");
        TextField_ID2.setText("");
        TextField_nama2.setText("");
    }//GEN-LAST:event_Button_editActionPerformed

    private void Button_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_hapusActionPerformed
        try {
            int id = Integer.parseInt(TextField_ID2.getText());
            service.delete(id);
            // Sinkronkan ulang seluruh list dari database
            idModel.clear();
            namaModel.clear();
            List<Mahasiswa> listMhs = service.getAll();
            for (Mahasiswa mhs : listMhs) {
                idModel.addElement(mhs.getId());
                namaModel.addElement(mhs.getNama());
            }
            updateList();
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "ID harus berupa angka!", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        TextField_ID1.setText("");
        TextField_nama1.setText("");
        TextField_ID2.setText("");
        TextField_nama2.setText("");
    }//GEN-LAST:event_Button_hapusActionPerformed

    private void Button_tambahkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_tambahkanActionPerformed
        try {
            Mahasiswa mhs = service.makeMhsObject();
            String nama = TextField_nama.getText();
            if (nama == null || nama.trim().isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong!", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            mhs.setNama(nama);
            service.add(mhs);
            // Sinkronkan ulang seluruh list dari database
            idModel.clear();
            namaModel.clear();
            List<Mahasiswa> listMhs = service.getAll();
            for (Mahasiswa i : listMhs) {
                idModel.addElement(i.getId());
                namaModel.addElement(i.getNama());
            }
            updateList();
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        TextField_nama.setText("");
    }//GEN-LAST:event_Button_tambahkanActionPerformed

    private void Button_resetIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_resetIndexActionPerformed
        try {
            idModel.clear();
            namaModel.clear();
            updateList();
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        TextField_ID1.setText("");
        TextField_nama1.setText("");
        TextField_ID2.setText("");
        TextField_nama2.setText("");
    }//GEN-LAST:event_Button_resetIndexActionPerformed

    private void List_idValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_List_idValueChanged
        // TODO add your handling code here:
        try {
            if (!evt.getValueIsAdjusting() && List_id.getSelectedValue() != null) {
                int selectedId = List_id.getSelectedValue();
                int index = idModel.indexOf(selectedId);
                String nama = namaModel.getElementAt(index);
                TextField_ID1.setText(String.valueOf(selectedId));
                TextField_nama1.setText(nama);
                TextField_ID2.setText(String.valueOf(selectedId));
                TextField_nama2.setText(nama);
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_List_idValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_AmbilData;
    private javax.swing.JButton Button_edit;
    private javax.swing.JButton Button_hapus;
    private javax.swing.JButton Button_resetIndex;
    private javax.swing.JButton Button_tambahkan;
    private javax.swing.JList<Integer> List_id;
    private javax.swing.JList<String> List_nama;
    private javax.swing.JTextField TextField_ID1;
    private javax.swing.JTextField TextField_ID2;
    private javax.swing.JTextField TextField_nama;
    private javax.swing.JTextField TextField_nama1;
    private javax.swing.JTextField TextField_nama2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
